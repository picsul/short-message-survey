install.packages("jsonlite")
library(blogdown)
custom_messages <- list(
survey_prompt = "Ready to take the BIOL 102/150/160 survey? Please respond with 'y' or 'yes' when you are ready to begin.",
sorry_message = "If you have any issues with the survey, please contact us at jmrosenberg@utk.edu.",
welcome_text = "Please respond with your agreement to the following statement on a scale from strongly disagree (1) to strongly agree (7)."
)
write_toml(custom_messages)
write_toml(custom_messages, "config.toml")
custom_messages <- list(
prompt = "Ready to take the BIOL 102/150/160 survey? Please respond with 'y' or 'yes' when you are ready to begin.",
sorry = "If you have any issues with the survey, please contact us at jmrosenberg@utk.edu.",
welcome = "Please respond with your agreement to the following statement on a scale from strongly disagree (1) to strongly agree (7)."
)
write_toml(custom_messages, "config.toml")
custom_messages <- list(
prompt = "Ready to take the BIOL 102/150/160 survey? Please respond with 'y' or 'yes' when you are ready to begin.",
sorry = "If you have any issues with the survey, please contact us at jmrosenberg@utk.edu.",
welcome = "Please respond with your agreement to the following statement on a scale from strongly disagree (1) to strongly agree (7).",
number = "+18652639199"
)
write_toml(custom_messages, "config.toml")
reticulate::repl_python()
json_string <- '{"a": "fjsodif", "b": "sjfodi", "c": "fjsodi"}'
library(jsonlite)
jsonlite::fromJSON(json_string)
ss <- jsonlite::fromJSON(json_string)
ss
is.list(ss)
reticulate::repl_python()
library(httr)
url="https://usc-survey.herokuapp.com/config_read"
GET(url = url)
GET(url = url)
reticulate::repl_python()
ss <- jsonlite::fromJSON('{"number": "+18652639199", "prompt": "Ready to take the BIOL 102/150/160 survey? Please respond with \'y\' or \'yes\' when you are ready to begin.", "sorry": "If you have any issues with the survey, please contact us at jmrosenberg@utk.edu.", "welcome": "Please respond with your agreement to the following statement on a scale from strongly disagree (1) to strongly agree (7)."}')
ss
is.list(ss)
GET(url = url)
b <- GET(url = url)
content(b)
?GET
?POS
?POST
content(b, type="application/json")
library(listviewer)
jsonedit(custom_messages)
getwd()
reticulate::repl_python()
1:100
id <- 1:100
runif(min = 1000000000, max = 9999999999)
runif(100, min = 1000000000, max = 9999999999)
install.packages("randomNames")
library(randomNames)
randomNames(100)
library(stringr)
rr <- randomNames(100)
rr
rr[94]
str_split(rr[94], ",")
str_split(rr[94], ", ")
str_split(rr, ", ")
ss <- str_split(rr, ", ")
map(ss)
library(purrr)
map(ss)
ss94 <- str_split(rr[94], ", ")
ss94
map(ss94, ~str_replace_all(., "[:punct:]"))
map(ss94, ~str_replace_all(., "[:punct:]", ""))
map(ss, map(., ~str_replace_all(., "[:punct:]", ""))
map(ss, map(., ~str_replace_all(., "[:punct:]", "")))
map(ss, map(., ~str_replace_all(., "[:punct:]", "")))
map(ss, ~map(., ~str_replace_all(., "[:punct:]", "")))
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", "")))
map_chr(ss), ~str_replace_all(., "[:punct:]", "")) %>%
map_chr(ss, ~str_replace_all(., "[:punct:]", "")) %>%
function(list){
map_chr(list, ~str_replace_all(., "[:punct:]", ""))
}
map_chr(ss, ~str_replace_all(., "[:punct:]", "")) #%>%
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map(~str_sub(.[1], 1,8))
map(~paste(tolower(str_sub(.[1], 1,8)), str_sub(.[2],1,2))
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map(~paste(tolower(str_sub(.[1], 1,8)), str_sub(.[2],1,2), sep = ""))
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map(~paste(tolower(str_sub(.[1], 1,8)), towlower(str_sub(.[2],1,1)), sep = ""))
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map(~paste(tolower(str_sub(.[1], 1,8)), tolower(str_sub(.[2],1,1)), sep = ""))
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map_chr(~paste(tolower(str_sub(.[1], 1,8)), tolower(str_sub(.[2],1,1)), sep = ""))
randomNames(100) %>%
str_split(", ") %>%
map(ss, ~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map_chr(~paste(tolower(str_sub(.[1], 1,8)), tolower(str_sub(.[2],1,1)), sep = ""))
randomNames(100) %>%
str_split(", ") %>%
map(~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map_chr(~paste(tolower(str_sub(.[1], 1,8)), tolower(str_sub(.[2],1,1)), sep = ""))
name <- randomNames(100) %>%
str_split(", ") %>%
map(~map_chr(., ~str_replace_all(., "[:punct:]", ""))) %>%
map_chr(~paste(tolower(str_sub(.[1], 1,8)), tolower(str_sub(.[2],1,1)), sep = ""))
bind_cols(id, number, name)
library(tidyverse)
bind_cols(id, number, name)
number <- runif(100, min = 1000000000, max = 9999999999)
bind_cols(id, number, name)
bind_cols("id" = id, "number" = number, "name" = name)
fake <- bind_cols("id" = id, "number" = number, "name" = name)
reticulate::repl_python()
